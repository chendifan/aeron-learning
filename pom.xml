<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cdf.aeron</groupId>
    <artifactId>aeron-learning</artifactId>
    <version>${revision}</version>
    <name>${project.artifactId}</name>
    <modules>
        <module>common</module>
        <module>rpc</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <!-- project -->
        <revision>1.0-SNAPSHOT</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>24</java.version>
        <!-- maven -->
        <maven.compiler.version>3.13.0</maven.compiler.version>
        <maven.source.version>3.3.1</maven.source.version>
        <maven.resources.version>3.3.1</maven.resources.version>
        <maven.surefire.version>3.5.2</maven.surefire.version>
        <maven-artifacts.version>3.9.9</maven-artifacts.version>
        <maven.assembly.version>3.7.1</maven.assembly.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <mybatis-generator-maven-plugin.version>1.4.2</mybatis-generator-maven-plugin.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <!-- libraries -->
        <spring-boot.version>3.5.0</spring-boot.version>
        <disruptor.version>3.4.4</disruptor.version>
        <hutool-all.version>5.8.38</hutool-all.version>
        <agrona.version>2.1.0</agrona.version>
        <aeron.version>1.47.4</aeron.version>
        <sbe.tool.version>1.34.1</sbe.tool.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.agrona</groupId>
                <artifactId>agrona</artifactId>
                <version>${agrona.version}</version>
            </dependency>
            <dependency>
                <groupId>io.aeron</groupId>
                <artifactId>aeron-all</artifactId>
                <version>${aeron.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <!-- 检测当前系统信息 -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>

        <resources>
            <resource>
                <!-- src/main/java -->
                <directory>${project.build.sourceDirectory}</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
            <resource>
                <directory>${pom.basedir}/src/main/resources/</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>META-INF/**</include>
                </includes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <!-- configuration 默认是继承的 -->
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                    <!-- executions 默认也是继承的，可以通过 inherited 修改 -->
                    <executions>
                        <execution>
                            <!-- fatjar 不建议与 jib 混用，因为会使 cache 失效（每次都重新构建整层 layer） -->
                            <id>Generate Executable JAR</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <!-- 非 SpringBoot 项目打 fatjar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <!-- 只添加 dependencies，还可以选 bin, src, project -->
                                <descriptorRefs>
                                    <descriptorRef>jar-with-dependencies</descriptorRef>
                                </descriptorRefs>
                                <!-- 不添加 classifier 后缀，所以会替换掉原有的 jar（除非禁用 maven-jar-plugin，否则会显示 WARNING，可以忽略） -->
                                <appendAssemblyId>false</appendAssemblyId>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成源码时，将生成出来的类（如 SbeTool 工具等，位于 <编译输出目录>/generated-sources/java）一并视为 source 进行编译打包 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/java/</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- 用于执行 java 或其它进程，可以绑定到某些生命周期，这里在生成源码时，执行 java 进程（main class 是 SbeTool），生成 sbe 相关类，输出到默认的输出目录 generated-sources/java 中 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>Generate SBE classes</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <includeProjectDependencies>false</includeProjectDependencies>
                        <includePluginDependencies>true</includePluginDependencies>
                        <mainClass>uk.co.real_logic.sbe.SbeTool</mainClass>
                        <systemProperties>
                            <systemProperty>
                                <key>sbe.output.dir</key>
                                <value>${project.build.directory}/generated-sources/java</value>
                            </systemProperty>
                        </systemProperties>
                        <arguments>
                            <argument>${pom.basedir}/src/main/resources/schema.xml</argument>
                        </arguments>
                        <workingDirectory>${project.build.directory}/generated-sources/java</workingDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>uk.co.real-logic</groupId>
                            <artifactId>sbe-tool</artifactId>
                            <version>${sbe.tool.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <!-- upgrade to JDK 24, explicitly announce dependency version here -->
                            <version>1.18.38</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.version}</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <argLine>
                        -javaagent:${settings.localRepository}/org/mockito/mockito-core/${mockito.version}/mockito-core-${mockito.version}.jar
                        -Xshare:off
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <dependencyConvergence/>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>